scheduler:
  type: ecs
  region: us-east-1
  cluster: eagletmt
  desired_count: 1
  task_role_arn: arn:aws:iam::012345678901:role/EcsDefault
  elb_v2:
    vpc_id: vpc-xxxxxxxx
    health_check_path: /site/sha
    listeners:
      - port: 80
        protocol: HTTP
      - port: 443
        protocol: HTTPS
        certificate_arn: arn:aws:acm:us-east-1:012345678901:certificate/01234567-89ab-cdef-0123-456789abcdef
    subnets:
      - subnet-xxxxxxxx
      - subnet-yyyyyyyy
    security_groups:
      - sg-xxxxxxxx
    load_balancer_attributes:
      access_logs.s3.enabled: 'true'
      access_logs.s3.bucket: hako-access-logs
      access_logs.s3.prefix: hako-hello-fargate
      idle_timeout.timeout_seconds: '5'
    target_group_attributes:
      deregistration_delay.timeout_seconds: '20'
  # Fargate
  execution_role_arn: arn:aws:iam::012345678901:role/ecsTaskExecutionRole
  cpu: '1024'
  memory: '2048'
  requires_compatibilities: ['FARGATE']
  network_mode: awsvpc
  launch_type: FARGATE
  network_configuration:
    awsvpc_configuration:
      subnets:
        - subnet-zzzzzzzz
        - subnet-wwwwwwww
      security_groups:
        - sg-yyyyyyyy
        - sg-zzzzzzzz
      assign_public_ip: DISABLED
app:
  image: ryotarai/hello-sinatra
  cpu: 128
  memory: 256
  env:
    PORT: '3000'
    MESSAGE: 'Hello, Fargate'
  log_configuration:
    log_driver: awslogs
    options:
      awslogs-group: /ecs/hello-fargate
      awslogs-region: us-east-1
      awslogs-stream-prefix: ecs
additional_containers:
  front:
    image_tag: hako-nginx
    log_configuration:
      log_driver: awslogs
      options:
        awslogs-group: /ecs/hello-fargate
        awslogs-region: us-east-1
        awslogs-stream-prefix: ecs
scripts:
  - <<: !include front.yml
    backend_port: 3000
